# Task ID: 12
# Title: 로깅, 오류 처리 및 모니터링 구현
# Status: pending
# Dependencies: 1, 2, 3, 4, 5, 6, 9
# Priority: low
# Description: 애플리케이션을 위한 포괄적인 로깅, 오류 처리 및 모니터링 시스템을 설정합니다.
# Details:
1. Python의 로깅 모듈을 사용한 구조화된 로깅 구현
2. 오류 추적 및 모니터링을 위한 Sentry 23.3.0 설정
3. FastAPI에서 전역 오류 처리 미들웨어 구현
4. 애플리케이션별 예외를 위한 사용자 정의 오류 클래스 생성
5. 백엔드 서비스에 대한 상태 확인 엔드포인트 설정
6. API 요청/응답 로깅 구현
7. 시스템 상태 및 사용량 통계를 모니터링하기 위한 간단한 관리자 대시보드 생성

# Test Strategy:
1. 다양한 시나리오(정보, 경고, 오류)에 대한 로그 출력 확인
2. Sentry에 오류 보고 테스트
3. 다양한 오류 조건을 시뮬레이션하고 적절한 처리 확인
4. 상태 확인 엔드포인트 확인
5. 로깅된 API 요청/응답의 완전성 검토
6. 관리자 대시보드 기능 테스트

# Subtasks:
## 1. 로깅 시스템 설계 [pending]
### Dependencies: None
### Description: 로깅 시스템의 아키텍처와 구성 요소를 상세히 설계합니다.
### Details:
로그 수집, 저장, 검색 메커니즘을 정의하고 로그 레벨, 포맷, 보존 정책을 결정합니다.

## 2. 오류 처리 시스템 설계 [pending]
### Dependencies: None
### Description: 오류 처리 및 예외 관리 시스템의 상세 설계를 수행합니다.
### Details:
오류 분류, 우선순위 지정, 에스컬레이션 프로세스, 오류 보고 메커니즘을 정의합니다.

## 3. 모니터링 시스템 설계 [pending]
### Dependencies: None
### Description: 시스템 및 애플리케이션 모니터링을 위한 상세 설계를 수행합니다.
### Details:
모니터링 대상, 메트릭, 알림 임계값, 대시보드 설계를 포함합니다.

## 4. 로깅-오류 처리 통합 설계 [pending]
### Dependencies: 12.1, 12.2
### Description: 로깅 시스템과 오류 처리 시스템 간의 통합 방안을 설계합니다.
### Details:
오류 로그의 자동 생성 및 저장, 로그 기반 오류 분석 메커니즘을 정의합니다.

## 5. 로깅-모니터링 통합 설계 [pending]
### Dependencies: 12.1, 12.3
### Description: 로깅 시스템과 모니터링 시스템 간의 통합 방안을 설계합니다.
### Details:
로그 기반 알림 트리거, 로그 데이터를 활용한 모니터링 대시보드 설계를 포함합니다.

## 6. 오류 처리-모니터링 통합 설계 [pending]
### Dependencies: 12.2, 12.3
### Description: 오류 처리 시스템과 모니터링 시스템 간의 통합 방안을 설계합니다.
### Details:
오류 발생 시 자동 알림 및 모니터링, 오류 통계 대시보드 설계를 포함합니다.

## 7. 통합 시스템 성능 및 확장성 설계 [pending]
### Dependencies: 12.4, 12.5, 12.6
### Description: 전체 통합 시스템의 성능 최적화 및 확장성 방안을 설계합니다.
### Details:
대용량 데이터 처리, 실시간 분석, 시스템 확장성 고려사항을 포함한 아키텍처를 설계합니다.

